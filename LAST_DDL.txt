set search_path to project


CREATE TABLE CUSTOMER (
	CUSTOMER_ID INTEGER PRIMARY KEY,
	ACCOUNT_NO BIGINT NOT NULL UNIQUE,
	CUSTOMER_FIRSTNAME VARCHAR(255) NOT NULL,
	CUSTOMER_MIDDLENAME VARCHAR(255) NOT NULL,
	CUSTOMER_LASTNAME VARCHAR(255) NOT NULL,
	EMAIL VARCHAR(255) NOT NULL CHECK (EMAIL LIKE '%@%.%' AND EMAIL NOT LIKE '@%' AND EMAIL NOT LIKE '%@%@%'),
	PHONE_NO BIGINT NOT NULL 
);



INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (1, 5600012549,'Anish','Vipul','shah',  'Anish21@gmail.com', 4859685726 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (2, 5600012345,'Darshi','Rakesh','Desai',  'Darshi15@gmail.com', 4859686526 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (3, 5600012456,'Nisha','Rupesh','shah',  'Nisha08@gmail.com', 4859685722 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (4, 5600012351,'Devam','Nalin','Panchasara',  'Devam12@gmail.com', 4851286526 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (5, 5600012414,'Jeemi','Anil','Thakkar',  'Jeemi08@gmail.com', 4456689432 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (6, 5600012111,'Sanjana','Mahesh','shah',  'Sanjana15@gmail.com', 4859681226 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (7, 5600012559,'Drishti','Ankit','Desai',  'Drishti26@gmail.com', 4859586726 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (8, 5600012574,'Akshay','Haresh','Patel',  'Akshay19@gmail.com', 4859581936 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (9, 5600012220,'Aangi','Kamlesh','Shah',  'aangi24@gmail.com', 4859685444 );
INSERT INTO customer (CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,PHONE_NO) VALUES (10,5600012550,'Aesha','Rajesh','Shah',  'aesha21@gmail.com', 4859685423 );

select * from customer


-------------------------------------------------------------------------------
CREATE TABLE BRANCH (
	BRANCH_ID INTEGER NOT NULL,
	BRANCH_NAME VARCHAR(255) NOT NULL,
	ADDRESS VARCHAR(255) NOT NULL,
	PHONE_NO BIGINT NOT NULL,
	IFSC_CODE VARCHAR(255) NOT NULL UNIQUE,
	PRIMARY KEY (BRANCH_ID) 
);



INSERT INTO BRANCH (BRANCH_ID,BRANCH_NAME,ADDRESS,PHONE_NO,IFSC_CODE) VALUES (1,'BOB Adval','Adval, Tal. Dhandhuka, Ahmedabad - 382460Adval , Gujarat',4859685423,  'BARB0ADVALX' );
INSERT INTO BRANCH (BRANCH_ID,BRANCH_NAME,ADDRESS,PHONE_NO,IFSC_CODE) VALUES (2,'BOB Ahmedabad','Post Box 101, Fuvara, Gandhi Road, Ahmedabad - 380001 Gujarat',4859685411,  'BARB0GANAHM' );
INSERT INTO BRANCH (BRANCH_ID,BRANCH_NAME,ADDRESS,PHONE_NO,IFSC_CODE) VALUES (3,'BOB Akhabarnagar','Millenium Plaza Akhabarnagar Circle Nava Wadaj, Ahmedabad - 38001 Gujarat',4859685421,  'BARB0AKHABA' );
INSERT INTO BRANCH (BRANCH_ID,BRANCH_NAME,ADDRESS,PHONE_NO,IFSC_CODE) VALUES (4,'BOB  Ambawadi','Ambawadi Branch, Panchvati, Ahemdabad, Pin - 380006, Gujarat',4859685455,  'BARB0AMBAWA' );
INSERT INTO BRANCH (BRANCH_ID,BRANCH_NAME,ADDRESS,PHONE_NO,IFSC_CODE) VALUES (5,'BOB JIVRAJ','132 Ring Road, Ahmedabad - 380051 Gujarat',4829681831,  'BARB0JIVRAJ' );



select * from BRANCH 

------------------------------------------------------------------------------
CREATE TABLE LOAN(
	LOAN_ID INTEGER PRIMARY KEY,
	ACCOUNT_ID INTEGER ,
	INTEREST_RATE FLOAT NOT NULL,
	DURATION VARCHAR(255) NOT NULL,
	LOAN_AMOUNT DECIMAL NOT NULL,
	DUE_AMOUNT  DECIMAL NOT NULL,
	START_DATE DATE NOT NULL,
	CUSTOMER_ID INTEGER ,
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE SET DEFAULT ON UPDATE CASCADE,
	FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT_DETAILS(ACCOUNT_ID) ON DELETE SET DEFAULT ON UPDATE CASCADE
);

INSERT INTO LOAN (LOAN_ID,INTEREST_RATE,DURATION,LOAN_AMOUNT,DUE_AMOUNT,START_DATE,CUSTOMER_ID,ACCOUNT_ID) VALUES (1,8.0,'3 Years',500000,350000,'20-Nov-21',1,3);
INSERT INTO LOAN (LOAN_ID,INTEREST_RATE,DURATION,LOAN_AMOUNT,DUE_AMOUNT,START_DATE,CUSTOMER_ID,ACCOUNT_ID) VALUES (2,9.5,'5 Years',1000000,650000,'10-mar-21',2,7);
INSERT INTO LOAN (LOAN_ID,INTEREST_RATE,DURATION,LOAN_AMOUNT,DUE_AMOUNT,START_DATE,CUSTOMER_ID,ACCOUNT_ID) VALUES (3,7.5,'2 Years',100000,75000,'8-may-21',3,3);
INSERT INTO LOAN (LOAN_ID,INTEREST_RATE,DURATION,LOAN_AMOUNT,DUE_AMOUNT,START_DATE,CUSTOMER_ID,ACCOUNT_ID) VALUES (4,6,'1 Years',50000,45000,'5-oct-21',5,14);
INSERT INTO LOAN (LOAN_ID,INTEREST_RATE,DURATION,LOAN_AMOUNT,DUE_AMOUNT,START_DATE,CUSTOMER_ID,ACCOUNT_ID) VALUES (5,12,'10 Years',5000000,3000000,'28-nov-17',8,7);


select * from loan 

-----------------------------------------------------------------------------------
CREATE TABLE ACCOUNT_DETAILS(
	ACCOUNT_ID BIGINT PRIMARY KEY,
	DATE_OPENED DATE NOT NULL,
	ACCOUNT_STATUS VARCHAR(255) NOT NULL,
	AADHAR_CARD_NUMBER BIGINT NOT NULL,
	AVL_BALANCE BIGINT DEFAULT 5000,
	ACCOUNT_TYPE VARCHAR(255) NOT NULL,
	CUSTOMER_ID INTEGER ,
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE SET DEFAULT ON UPDATE CASCADE,
	BRANCH_ID INTEGER ,
	FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH(BRANCH_ID) ON DELETE SET DEFAULT ON UPDATE CASCADE
);

INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (1,'20-dec-18','Active','123456789012','Current',1,1);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (2,'2-sep-16','Active','123456879021','Fixed',2,2);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (3,'20-mar-14','Active','321456879021','Savings',3,3);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (4,'15-jun-14','Active','321465879021','Savings',4,4);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (5,'19-oct-18','Active','311475680921','Current',5,5);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (6,'1-nov-18','Active','123455579021','Fixed',6,1);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (7,'20-mar-14','Active','321456666021','Savings',7,2);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (8,'8-may-20','Active','134625879021','Fixed',8,3);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (9,'19-oct-20','Active','311475680000','Current',9,4);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (10,'20-oct-18','Active','311465780921','Current',10,5);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (11,'21-Feb-16','Active','321465879021','Current',4,2);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (13,'1-Dec-20','Active','123455579021','Current',6,1);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (14,'10-Apr-20','Active','123456789012','Savings',4,2);
INSERT INTO ACCOUNT_DETAILS (ACCOUNT_ID,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,AVL_BALANCE,ACCOUNT_TYPE,CUSTOMER_ID,BRANCH_ID) VALUES (15,'20-Dec-21','Active','132465978102',10000,'Savings',6,3);



select * from account_details

-----------------------------------------------------------------------------------
CREATE TABLE CARDS(
	CARD_ID INTEGER PRIMARY KEY,
	CARD_TYPE VARCHAR(255) NOT NULL,
	CARD_AMOUNT FLOAT,
	CARD_NUMBER BIGINT NOT NULL,
	CARD_CVV INTEGER NOT NULL,
	CARD_EXPIRYDATE DATE NOT NULL,
	CUSTOMER_ID INTEGER,
	FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER(CUSTOMER_ID) ON DELETE SET DEFAULT ON UPDATE CASCADE
);

INSERT INTO CARDS(CARD_ID,CARD_TYPE,CARD_NUMBER,CARD_CVV,CARD_EXPIRYDATE,CUSTOMER_ID)VALUES(1,'Debit','2624970525726523','415','04-dec-2018',1);
INSERT INTO CARDS(CARD_ID,CARD_TYPE,CARD_AMOUNT,CARD_NUMBER,CARD_CVV,CARD_EXPIRYDATE,CUSTOMER_ID)VALUES(2,'Credit','100000','4977557004155495','615','15-dec-2018',9);
INSERT INTO CARDS(CARD_ID,CARD_TYPE,CARD_NUMBER,CARD_CVV,CARD_EXPIRYDATE,CUSTOMER_ID)VALUES(3,'Debit','4555970549833015','629','04-jan-2020',4);
INSERT INTO CARDS(CARD_ID,CARD_TYPE,CARD_AMOUNT,CARD_NUMBER,CARD_CVV,CARD_EXPIRYDATE,CUSTOMER_ID)VALUES(4,'Credit','50000','4062974550323615','252','04-sep-2019',8);
INSERT INTO CARDS(CARD_ID,CARD_TYPE,CARD_NUMBER,CARD_CVV,CARD_EXPIRYDATE,CUSTOMER_ID)VALUES(5,'Debit','4062974550323615','252','04-sep-2019',5);

select * from cards

---------------------------------------------------------------------------------------



 CREATE TABLE TRANSACTIONS(
	TRANSACTION_ID INTEGER PRIMARY KEY,
	ACCOUNT_ID BIGINT,
	TRANSACTION_TYPE VARCHAR(255) NOT NULL ,
	TRANSACTION_AMOUNT FLOAT NOT NULL CHECK (TRANSACTION_AMOUNT>0),
	TRANSACTION_DATE DATE NOT NULL ,
	TRANSACTION_TIME TIME NOT NULL,
    	TRANSACTION_DETAILS VARCHAR(255) NOT NULL ,
	FOREIGN KEY (ACCOUNT_ID) REFERENCES ACCOUNT_DETAILS(ACCOUNT_ID) ON DELETE SET DEFAULT ON UPDATE CASCADE
);




INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (1,'CASH','DEBIT',3000, '20-Dec-18','18:53:04',1);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (2,'CASH','CREDIT',4000, '20-Dec-20','14:08:04',3);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (3,'CHEQUE','CREDIT',10000, '06-Mar-21','10:48:42',5);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (4,'CARD','DEBIT',2000, '08-Jan-22','23:17:14',7);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (5,'CARD','CREDIT',25000, '14-Jul-21','21:34:48',10);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (6,'CASH','CREDIT',7000, '20-Dec-18','13:40:48',4);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (7,'CREDIT','DEBIT',12000, '20-Sep-21','08:26:07',7);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (8,'CHEQUE','DEBIT',17500, '08-Dec-22','08:43:01',3);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (9,'CASH','CREDIT',25000, '18-May-21','17:48:59',1);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (10,'CARD','DEBIT',4800, '12-Jun-20','22:26:29',7);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (11,'CHEQUE','DEBIT',18000, '06-Feb-22','19:28:48',3);
INSERT INTO TRANSACTIONS (TRANSACTION_ID,TRANSACTION_TYPE,TRANSACTION_DETAILS,TRANSACTION_AMOUNT,TRANSACTION_DATE,TRANSACTION_TIME,ACCOUNT_ID) VALUES (12,'CARD','CREDIT',6700, '06-Dec-21','15:23:48',4);






SELECT * FROM TRANSACTIONS


-----------------------------------------------------------------------------------------------------
1 - SELECT COUNT(CUSTOMER_ID) FROM CUSTOMER

2 - SELECT SUM(TRANSACTION_AMOUNT),COUNT(TRANSACTION_AMOUNT) FROM  TRANSACTIONS WHERE TRANSACTION_DATE='2018-12-20' 

3 - SELECT ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,DATE_OPENED,ACCOUNT_STATUS,AADHAR_CARD_NUMBER,ACCOUNT_TYPE FROM customer AS C JOIN ACCOUNT_DETAILS AS A ON(C.CUSTOMER_ID=A.CUSTOMER_ID) where extract (YEAR from DATE_OPENED) between 2020 and 2021;

4 - SELECT ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME FROM CUSTOMER AS C JOIN CARDS AS CD ON(C.CUSTOMER_ID=CD.CUSTOMER_ID) WHERE CARD_TYPE='Debit'

5 - SELECT * FROM TRANSACTIONS AS T JOIN ACCOUNT_DETAILS AS A ON(T.ACCOUNT_ID=A.ACCOUNT_ID) JOIN CUSTOMER AS C ON (C.CUSTOMER_ID=A.CUSTOMER_ID) WHERE extract (YEAR from TRANSACTION_DATE)=2021 AND extract (MONTH from TRANSACTION_DATE)=09 AND TRANSACTION_TYPE='CREDIT'


6 - SELECT C.CUSTOMER_ID,ACCOUNT_NO,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME,EMAIL,C.PHONE_NO FROM CUSTOMER AS C JOIN ACCOUNT_DETAILS AS A ON(C.CUSTOMER_ID=A.CUSTOMER_ID) JOIN BRANCH AS B ON(A.BRANCH_ID=B.BRANCH_ID) GROUP BY C.CUSTOMER_ID HAVING COUNT(DISTINCT A.BRANCH_ID)>1 ;


7 - COUNT TOTAL NO. OF ACCOUNT TYPES OF DIFF BRANCHES
-> SELECT B.BRANCH_ID,B.BRANCH_NAME,ACCOUNT_TYPE,COUNT(ACCOUNT_TYPE) FROM ACCOUNT_DETAILS AS A JOIN BRANCH AS B ON(A.BRANCH_ID=B.BRANCH_ID) GROUP BY ACCOUNT_TYPE,B.BRANCH_ID ORDER BY BRANCH_ID


8 - List the customer_id who have both savings & current account 
select customer_id from ACCOUNT_DETAILS where ACCOUNT_TYPE='Savings' intersect select customer_id from ACCOUNT_DETAILS where ACCOUNT_TYPE='Current'


9 - FIND THE MAXIMUM COUNT OF TRANSACTION DONE BY A CUSTOMER 
SELECT COUNT(TRANSACTION_ID) AS TOTAL_TRANSACTION,CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME FROM TRANSACTIONS AS T JOIN ACCOUNT_DETAILS AS A ON (T.ACCOUNT_ID=A.ACCOUNT_ID) JOIN CUSTOMER AS C ON(A.CUSTOMER_ID=C.CUSTOMER_ID) GROUP BY T.ACCOUNT_ID,C.CUSTOMER_ID ORDER BY COUNT(TRANSACTION_ID) DESC LIMIT 1


10 - FIND THE MAXIMUM COUNT OF TRANSACTION DONE BY A CUSTOMER USING CHEQUE
SELECT COUNT(TRANSACTION_ID),CUSTOMER_FIRSTNAME,CUSTOMER_MIDDLENAME,CUSTOMER_LASTNAME FROM TRANSACTIONS AS T JOIN ACCOUNT_DETAILS AS A ON (T.ACCOUNT_ID=A.ACCOUNT_ID) JOIN CUSTOMER AS C ON(A.CUSTOMER_ID=C.CUSTOMER_ID) WHERE TRANSACTION_TYPE='CHEQUE' GROUP BY T.ACCOUNT_ID,C.CUSTOMER_ID ORDER BY MAX(TRANSACTION_ID) DESC


11- Write a query to display the customer’s id,customer’s firstname, account id and duration for people who have taken loans.
SELECT customer.customer_id, customer_firstname,account_details.account_id, loan.duration
FROM ((loan
INNER JOIN customer ON loan.customer_id=customer.customer_id)
INNER JOIN account_details ON loan.account_id=account_details.account_id);


12- Write a query to display the customer id, firstname, account_opened_date. Display in sorted order of date of account opened and within that sort by firstname.
SELECT C.CUSTOMER_ID,C.CUSTOMER_FIRSTNAME,A.date_opened FROM Customer AS C JOIN ACCOUNT_DETAILS AS A ON(C.CUSTOMER_ID=A.CUSTOMER_ID) 
ORDER BY EXTRACT(year FROM date_opened), c.customer_firstname ASC;


13- Write a query to display  the customer id, customer firstname,account number for the customer’s whose accounts were created after 15th date of any month.
SELECT account_details.customer_id, customer.customer_firstname, account_details.aadhar_card_number,account_details.date_opened
FROM account_details,customer
WHERE account_details.customer_id = customer.customer_id
AND EXTRACT (day FROM date_opened)>15;


14 - write a query to dispplay the customer name who has highest  balance
SELECT * FROM ACCOUNT_DETAILS GROUP BY ACCOUNT_ID HAVING AVL_BALANCE=(SELECT MAX(AVL_BALANCE) FROM ACCOUNT_DETAILS);
 

15 - FIND SUM OF TOTAL TOTAL_TRANSACTION_AMOUNT WHERE TRANSACTION MONTH 12/2021 AND 01/2021
SELECT SUM(TRANSACTION_AMOUNT) AS tOTAL_TRANSACTION_AMOUNT FROM TRANSACTIONS WHERE EXTRACT(YEAR FROM TRANSACTION_DATE)=2021 AND (EXTRACT(MONTH FROM TRANSACTION_DATE)=12 OR EXTRACT(MONTH FROM TRANSACTION_DATE)=01) 


15 - DISPLAY THE BRANCH_DETAILS WHO GIVES MAXIMUM LOANS
SELECT A.BRANCH_ID,B.BRANCH_NAME,B.ADDRESS,B.PHONE_NO,B.IFSC_CODE FROM LOAN AS L JOIN ACCOUNT_DETAILS AS A ON(L.ACCOUNT_ID=A.ACCOUNT_ID) JOIN BRANCH AS B ON(A.BRANCH_ID=B.BRANCH_ID) GROUP BY A.BRANCH_ID,B.BRANCH_NAME,B.ADDRESS,B.PHONE_NO,B.IFSC_CODE ORDER BY COUNT(A.BRANCH_ID) DESC LIMIT 1 












